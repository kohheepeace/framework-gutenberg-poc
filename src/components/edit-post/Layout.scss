@import '@wordpress/base-styles/variables';
@import '@wordpress/base-styles/mixins';
@import '@wordpress/base-styles/breakpoints';

// https://github.com/WordPress/gutenberg/blob/d9ea8d072626f5ad1e5d50ab4207590cfa170b4a/packages/interface/src/components/interface-skeleton/style.scss

// On Mobile devices, swiping the HTML element should not scroll.
// By making it fixed, we prevent that.
html.interface-interface-skeleton__html-container {
	position: fixed;
	width: 100%;

	@include break-medium() {
		position: initial;
		width: initial;
	}
}

.interface-interface-skeleton {
	display: flex;
	flex-direction: row;
	height: auto;
	max-height: 100%;

	// Fill the available space on Mobile.
	position: fixed;
	top: $admin-bar-height-big;
	left: 0;
	right: 0;
	bottom: 0;

	// Adjust to admin-bar going small.
	@media (min-width: #{ ($break-medium + 1) }) {
		top: 0;

		// .is-fullscreen-mode & {
		// 	top: 0;
		// }
	}
}

.interface-interface-skeleton__editor {
	display: flex;
	flex-direction: column;
	flex: 0 1 100%;
	overflow: hidden;
}


.interface-interface-skeleton__body {
	flex-grow: 1;
	display: flex;

	// Even on Mobile, we choose to scroll this element on its own.
	// This helps enable a fixed-to-top toolbar that makes the editing experience
	// on Mobile Safari usable.
	// Unfortunately an issue still exists where if you swipe the top toolbar
	// or beyond the bottom of the page when the soft keyboard is showing, you scroll
	// the body element and can scroll the toolbar out of view.
	// This is still preferable, though, as it allows the editor to function at all.
	overflow: auto;

	// In future versions of Mobile Safari, hopefully overscroll-behavior will be supported.
	// This allows us to disallow the scroll-chaining and rubber-banding that is currently
	// is the cause of the issue outlined above.
	// In other words, the following behavior doesn't yet work in Safari, but if/when
	// it is added, it should take care of the issue.
	// See also: https://drafts.csswg.org/css-overscroll/
	overscroll-behavior-y: none;

	// Footer overlap prevention
	.has-footer & {
		@include break-medium() {
			padding-bottom: $button-size-small + $border-width;
		}
	}
}

.interface-interface-skeleton__content {
	flex-grow: 1;

	// Treat as flex container to allow children to grow to occupy full
	// available height of the content area.
	display: flex;
	flex-direction: column;

	// On Mobile the header is fixed to keep HTML as scrollable.
	// Beyond the medium breakpoint, we allow the sidebar.
	// The sidebar should scroll independently, so enable scroll here also.
	overflow: auto;

	// On Safari iOS on smaller viewports lack of a z-index causes the background
	// to "bleed" through the header.
	// See https://github.com/WordPress/gutenberg/issues/32631
	z-index: z-index(".interface-interface-skeleton__content");

	// On Safari the z-index is not respected when the element is fixed.
	// Setting it to auto fixes the problem
	@include break-medium() {
		z-index: auto;
	}
}

.interface-interface-skeleton__secondary-sidebar,
.interface-interface-skeleton__sidebar {
	flex-shrink: 0;
	position: absolute;
	z-index: z-index(".interface-interface-skeleton__sidebar");
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	background: $white;
	color: $gray-900;

	// On Mobile the header is fixed to keep HTML as scrollable.
	@include break-medium() {
		position: relative !important;
		width: auto; // Keep the sidebar width flexible.

		// Set this z-index only when the sidebar is opened. When it's closed, the
		// button to open the sidebar that is shown when navigating regions needs to
		// be above the footer. See `edit-post-layout__toggle-sidebar-panel`.
		.is-sidebar-opened & {
			z-index: z-index(".interface-interface-skeleton__sidebar {greater than small}");
		}
	}
}

.interface-interface-skeleton__sidebar {
	overflow: auto;

	@include break-medium() {
		border-left: $border-width solid $gray-200;
	}
}

.interface-interface-skeleton__secondary-sidebar {
	@include break-medium() {
		border-right: $border-width solid $gray-200;
	}
}

.interface-interface-skeleton__header {
	flex-shrink: 0;
	height: auto;  // Keep the height flexible.
	border-bottom: $border-width solid $gray-200;
	z-index: z-index(".interface-interface-skeleton__header");
	color: $gray-900;
}